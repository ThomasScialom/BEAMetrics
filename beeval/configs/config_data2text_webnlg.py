import json
from beeval.configs.config_base import ConfigBase
from beeval.metrics.metric_reporter import _DEFAULT_METRIC_NAMES

class Data2textWebNLG(ConfigBase):
    def __init__(self):

        file_name = 'webnlg-data.json'
        file_name_processed = 'processed.data2text.webnlg'
        metric_names = _DEFAULT_METRIC_NAMES

        language = "en"
        task = "data2text"
        nb_refs = 3

        dimensions = ('fluency', 'grammar', 'semantics')

        dimensions_definitions = {'fluency': "Does the text sound fluent and natural?",
                                       'grammar': "Is the text grammatical?",
                                       'semantics': "Does the text correctly represent the meaning in the data?"
        }

        scale = "likert"

        sampled_from = "https://webnlg-challenge.loria.fr/files/webnlg-human-evaluation-results.pdf"

        citation = """
                        @article{shimorina2019webnlg,
                          title={WebNLG Challenge: Human Evaluation Results},
                          author={Shimorina, Anastasia and Gardent, Claire and Narayan, Shashi and Perez-Beltrachini, Laura},
                          year={2019}}
                        """

        additional_comments = "The evaluated texts are generated by automatic systems on WebNLG and evaluated on a likert scale from 1 to 3."

        super().__init__(
            file_name=file_name,
            file_name_processed=file_name_processed,
            metric_names=metric_names,
            language=language,
            task=task,
            nb_refs=nb_refs,
            dimensions=dimensions,
            dimensions_definitions=dimensions_definitions,
            scale=scale,
            sampled_from=sampled_from,
            citation=citation,
            additional_comments=additional_comments
        )

    def format_file(
        self,
        path
    ):
        with open(path, "r") as f_r:
            temp_data = json.loads(f_r.read())

        d_data = {}
        for i, ex in enumerate(temp_data):
            ex['source'] = ex['source'].split('<br>')
            d_data[i] = ex
        return d_data